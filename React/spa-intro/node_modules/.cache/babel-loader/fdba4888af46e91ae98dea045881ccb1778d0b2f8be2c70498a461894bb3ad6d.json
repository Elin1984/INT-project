{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ELIN\\\\Desktop\\\\INT full Stack\\\\React\\\\spa-intro\\\\src\\\\pages\\\\IndexPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { PageContainer } from \"../components/common/PageContainer\";\nimport { Button, LinkButton } from \"../components/common/Button\";\nimport { H1 } from \"../components/common/Typography\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IndexPage = () => {\n  _s();\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const handleToggleDarkMode = () => {\n    setIsDarkMode(prevDarkMode => !prevDarkMode);\n  };\n  return /*#__PURE__*/_jsxDEV(PageContainer, {\n    isDarkMode: isDarkMode,\n    children: [/*#__PURE__*/_jsxDEV(H1, {\n      children: \"Welcome to my Rick and Morty API\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LinkButton, {\n      to: \"/all\",\n      children: \"All Characters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(IndexPage, \"vYJNNV25FHwH0TTZOrX//UDd4kA=\");\n_c = IndexPage;\nexport default IndexPage;\nvar _c;\n$RefreshReg$(_c, \"IndexPage\");","map":{"version":3,"names":["React","useState","PageContainer","Button","LinkButton","H1","IndexPage","isDarkMode","setIsDarkMode","handleToggleDarkMode","prevDarkMode"],"sources":["C:/Users/ELIN/Desktop/INT full Stack/React/spa-intro/src/pages/IndexPage.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { PageContainer } from \"../components/common/PageContainer\";\r\nimport { Button, LinkButton } from \"../components/common/Button\";\r\nimport { H1 } from \"../components/common/Typography\";\r\n\r\nconst IndexPage = () => {\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n\r\n  const handleToggleDarkMode = () => {\r\n    setIsDarkMode((prevDarkMode) => !prevDarkMode);\r\n  };\r\n\r\n  return (\r\n    <PageContainer isDarkMode={isDarkMode}>\r\n      {/* <Button onClick={handleToggleDarkMode}>Toggle dark mode</Button> */}\r\n      <H1>Welcome to my Rick and Morty API</H1>\r\n      <LinkButton to=\"/all\">All Characters</LinkButton>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default IndexPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,QAAQ,oCAAoC;AAClE,SAASC,MAAM,EAAEC,UAAU,QAAQ,6BAA6B;AAChE,SAASC,EAAE,QAAQ,iCAAiC;AAAC;AAErD,MAAMC,SAAS,GAAG,MAAM;EAAA;EACtB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMQ,oBAAoB,GAAG,MAAM;IACjCD,aAAa,CAAEE,YAAY,IAAK,CAACA,YAAY,CAAC;EAChD,CAAC;EAED,oBACE,QAAC,aAAa;IAAC,UAAU,EAAEH,UAAW;IAAA,wBAEpC,QAAC,EAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAsC,eACzC,QAAC,UAAU;MAAC,EAAE,EAAC,MAAM;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA4B;EAAA;IAAA;IAAA;IAAA;EAAA,QACnC;AAEpB,CAAC;AAAC,GAdID,SAAS;AAAA,KAATA,SAAS;AAgBf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}